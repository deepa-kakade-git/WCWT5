@views.route('/wcwt5_timesheet/<int:taxpayer_id>', methods=['GET', 'POST'])
def wcwt5_timesheet(taxpayer_id):
    # Fetch valid time entry codes from wcwt5_timesheetentrycode_lov table
    time_entry_codes = db.session.query(TimesheetEntryCode_LOV.TimeEntryCode, TimesheetEntryCode_LOV.TimeEntryDesc).all()

    if request.method == 'POST':
        # Process form submission and add/delete multiple rows to/from the wcwt5_timesheet table
        timesheets = request.form.getlist('timesheets')
        for timesheet_data in timesheets:
            # Extract data for each timesheet entry from the form
            time_entry_date = timesheet_data.get('TimeEntryDate')
            time_entry_code = timesheet_data.get('TimeEntryCode')
            time_entry_other_desc = timesheet_data.get('TimeEntryOtherDesc')
            is_deleted = timesheet_data.get('isDeleted', False)

            if is_deleted:
                # If the timesheet entry is marked for deletion, delete it from the database
                Timesheet.query.filter_by(TaxpayerInfo_id=taxpayer_id, TimeEntryDate=time_entry_date, TimeEntryCode=time_entry_code).delete()
            else:
                # Otherwise, add/update the timesheet entry in the database
                timesheet = Timesheet.query.filter_by(TaxpayerInfo_id=taxpayer_id, TimeEntryDate=time_entry_date, TimeEntryCode=time_entry_code).first()
                if timesheet:
                    # Update existing timesheet entry
                    timesheet.TimeEntryOtherDesc = time_entry_other_desc
                else:
                    # Create a new timesheet entry
                    new_timesheet = Timesheet(
                        TaxpayerInfo_id=taxpayer_id,
                        TimeEntryDate=time_entry_date,
                        TimeEntryCode=time_entry_code,
                        TimeEntryOtherDesc=time_entry_other_desc
                    )
                    db.session.add(new_timesheet)

        # Commit changes to the database session
        db.session.commit()

        # Redirect to a success page or another route
        return redirect(url_for('views.success'))
    else:
        # Fetch existing timesheets for the taxpayer from the database
        existing_timesheets = Timesheet.query.filter_by(TaxpayerInfo_id=taxpayer_id).all()

        # Render the HTML template for adding, displaying, and deleting timesheets
        return render_template('add_timesheets.html', taxpayer_id=taxpayer_id, existing_timesheets=existing_timesheets, time_entry_codes=time_entry_codes)




# CORRECTED for REFLECTED objects
@views.route('/wcwt5_timesheet/<int:taxpayer_id>', methods=['GET', 'POST'])
def wcwt5_timesheet(taxpayer_id):
    # Fetch valid time entry codes from wcwt5_timesheetentrycode_lov table
    time_entry_codes = db.session.query(TimesheetEntryCode_LOV.TimeEntryCode, TimesheetEntryCode_LOV.TimeEntryDesc).all()

    if request.method == 'POST':
        # Process form submission and add/delete multiple rows to/from the Timesheet table
        timesheets = request.form.getlist('timesheets')
        for timesheet_data in timesheets:
            # Extract data for each timesheet entry from the form
            time_entry_date = timesheet_data.get('TimeEntryDate')
            time_entry_code = timesheet_data.get('TimeEntryCode')
            time_entry_other_desc = timesheet_data.get('TimeEntryOtherDesc')
            is_deleted = timesheet_data.get('isDeleted', False)

            if is_deleted:
                # If the timesheet entry is marked for deletion, delete it from the database
                db.session.query(Timesheet).filter_by(TaxpayerInfo_id=taxpayer_id, TimeEntryDate=time_entry_date, TimeEntryCode=time_entry_code).delete()
            else:
                # Otherwise, add/update the timesheet entry in the database
                timesheet = Timesheet.query.filter_by(TaxpayerInfo_id=taxpayer_id, TimeEntryDate=time_entry_date, TimeEntryCode=time_entry_code).first()
                if timesheet:
                    # Update existing timesheet entry
                    timesheet.TimeEntryOtherDesc = time_entry_other_desc
                else:
                    # Create a new timesheet entry
                    new_timesheet = Timesheet(
                        TaxpayerInfo_id=taxpayer_id,
                        TimeEntryDate=time_entry_date,
                        TimeEntryCode=time_entry_code,
                        TimeEntryOtherDesc=time_entry_other_desc
                    )
                    db.session.add(new_timesheet)

        # Commit changes to the database session
        db.session.commit()

        # Redirect to a success page or another route
        return redirect(url_for('views.success'))
    else:
        # Fetch existing timesheets for the taxpayer from the database
        existing_timesheets = db.session.query(Timesheet).filter_by(TaxpayerInfo_id=taxpayer_id).all()

        # Render the HTML template for adding, displaying, and deleting timesheets
        return render_template('add_timesheets.html', taxpayer_id=taxpayer_id, existing_timesheets=existing_timesheets, time_entry_codes=time_entry_codes)
